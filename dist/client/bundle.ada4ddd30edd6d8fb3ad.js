(()=>{"use strict";var e={56:(e,t,a)=>{e.exports=function(e){var t=a.nc;t&&e.setAttribute("nonce",t)}},72:e=>{var t=[];function a(e){for(var a=-1,n=0;n<t.length;n++)if(t[n].identifier===e){a=n;break}return a}function n(e,n){for(var s={},o=[],r=0;r<e.length;r++){var c=e[r],l=n.base?c[0]+n.base:c[0],d=s[l]||0,h="".concat(l," ").concat(d);s[l]=d+1;var p=a(h),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var g=i(u,n);n.byIndex=r,t.splice(r,0,{identifier:h,updater:g,references:1})}o.push(h)}return o}function i(e,t){var a=t.domAPI(t);return a.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;a.update(e=t)}else a.remove()}}e.exports=function(e,i){var s=n(e=e||[],i=i||{});return function(e){e=e||[];for(var o=0;o<s.length;o++){var r=a(s[o]);t[r].references--}for(var c=n(e,i),l=0;l<s.length;l++){var d=a(s[l]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}s=c}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var a="",n=void 0!==t[5];return t[4]&&(a+="@supports (".concat(t[4],") {")),t[2]&&(a+="@media ".concat(t[2]," {")),n&&(a+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),a+=e(t),n&&(a+="}"),t[2]&&(a+="}"),t[4]&&(a+="}"),a}).join("")},t.i=function(e,a,n,i,s){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(n)for(var r=0;r<this.length;r++){var c=this[r][0];null!=c&&(o[c]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);n&&o[d[0]]||(void 0!==s&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=s),a&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=a):d[2]=a),i&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=i):d[4]="".concat(i)),t.push(d))}},t}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},601:e=>{e.exports=function(e){return e[1]}},659:e=>{var t={};e.exports=function(e,a){var n=function(e){if(void 0===t[e]){var a=document.querySelector(e);if(window.HTMLIFrameElement&&a instanceof window.HTMLIFrameElement)try{a=a.contentDocument.head}catch(e){a=null}t[e]=a}return t[e]}(e);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(a)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(a){!function(e,t,a){var n="";a.supports&&(n+="@supports (".concat(a.supports,") {")),a.media&&(n+="@media ".concat(a.media," {"));var i=void 0!==a.layer;i&&(n+="@layer".concat(a.layer.length>0?" ".concat(a.layer):""," {")),n+=a.css,i&&(n+="}"),a.media&&(n+="}"),a.supports&&(n+="}");var s=a.sourceMap;s&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleTagTransform(n,e,t.options)}(t,e,a)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},856:(e,t,a)=>{a.d(t,{A:()=>r});var n=a(601),i=a.n(n),s=a(314),o=a.n(s)()(i());o.push([e.id,':root{--bg-primary: #1a1a1a;--bg-secondary: #2d2d2d;--bg-tertiary: #3d3d3d;--text-primary: #ffffff;--text-secondary: #cccccc;--text-muted: #888888;--accent-primary: #4a9eff;--accent-secondary: #36d9ac;--border-color: #444444;--shadow: rgba(0, 0, 0, 0.3);--success: #28a745;--warning: #ffc107;--danger: #dc3545;--info: #17a2b8}[data-theme=light]{--bg-primary: #f8f9fa;--bg-secondary: #ffffff;--bg-tertiary: #e9ecef;--text-primary: #212529;--text-secondary: #495057;--text-muted: #6c757d;--border-color: #dee2e6;--shadow: rgba(0, 0, 0, 0.1)}*{margin:0;padding:0;box-sizing:border-box}body{font-family:"Inter",sans-serif;background-color:var(--bg-primary);color:var(--text-primary);line-height:1.5}.chess-app{min-height:100vh;display:flex;flex-direction:column}.app-header{display:flex;justify-content:space-between;align-items:center;padding:1rem 2rem;background-color:var(--bg-secondary);border-bottom:1px solid var(--border-color);box-shadow:0 2px 4px var(--shadow)}.app-header .app-title{font-size:1.5rem;font-weight:600;color:var(--text-primary)}.app-header .app-nav{display:flex;gap:.5rem}.app-header .app-nav .nav-btn{padding:.5rem 1rem;background-color:rgba(0,0,0,0);border:1px solid var(--border-color);border-radius:.375rem;color:var(--text-secondary);cursor:pointer;transition:all .2s ease}.app-header .app-nav .nav-btn:hover{background-color:var(--bg-tertiary);color:var(--text-primary)}.app-header .app-nav .nav-btn:active{transform:translateY(1px)}.app-main{flex:1;padding:2rem}.game-container{display:grid;grid-template-columns:1fr 400px;gap:2rem;max-width:1400px;margin:0 auto}.chess-board-container{position:relative;width:fit-content;margin:0 auto}.chess-board{display:grid;grid-template-columns:repeat(8, 1fr);grid-template-rows:repeat(8, 1fr);width:640px;height:640px;border:2px solid var(--border-color);border-radius:.5rem;overflow:hidden;box-shadow:0 8px 16px var(--shadow)}.chess-board.flipped{transform:rotate(180deg)}.chess-board.flipped .chess-square{transform:rotate(180deg)}.chess-square{position:relative;display:flex;align-items:center;justify-content:center;font-size:3rem;cursor:pointer;transition:all .2s ease}.chess-square.light{background-color:#f0d9b5}.chess-square.dark{background-color:#b58863}.chess-square.selected{box-shadow:inset 0 0 0 4px #4a9eff}.chess-square.legal-move::after{content:"";position:absolute;width:30%;height:30%;border-radius:50%;background-color:rgba(74,158,255,.6)}.chess-square.legal-capture::after{content:"";position:absolute;inset:0;border:4px solid rgba(255,92,92,.6);border-radius:50%}.chess-square .piece-container{width:100%;height:100%;display:flex;align-items:center;justify-content:center;user-select:none;transition:transform .2s ease}.chess-square .piece-container:hover{transform:scale(1.1)}.chess-square .piece-container.piece-white{color:#fff;text-shadow:1px 1px 0 #000,-1px -1px 0 #000,1px -1px 0 #000,-1px 1px 0 #000,2px 2px 3px rgba(0,0,0,.8)}.chess-square .piece-container.piece-black{color:#1a1a1a;text-shadow:1px 1px 0 #fff,-1px -1px 0 #fff,1px -1px 0 #fff,-1px 1px 0 #fff,2px 2px 3px hsla(0,0%,100%,.6)}.chess-board[data-theme=blue] .chess-square.light{background-color:#dee3e6}.chess-board[data-theme=blue] .chess-square.dark{background-color:#8ca2ad}.chess-board[data-theme=green] .chess-square.light{background-color:#ffd}.chess-board[data-theme=green] .chess-square.dark{background-color:#86a666}.chess-board[data-theme=purple] .chess-square.light{background-color:#e6e6fa}.chess-board[data-theme=purple] .chess-square.dark{background-color:#9370db}.chess-board[data-theme=red] .chess-square.light{background-color:#ffd1dc}.chess-board[data-theme=red] .chess-square.dark{background-color:#cd5c5c}.chess-board[data-theme=gray] .chess-square.light{background-color:#f5f5f5}.chess-board[data-theme=gray] .chess-square.dark{background-color:dimgray}.coordinates{position:absolute;inset:0;pointer-events:none}.coordinates .files{position:absolute;bottom:-20px;left:0;right:0;display:flex}.coordinates .files .file-label{flex:1;text-align:center;font-size:.875rem;color:var(--text-muted)}.coordinates .ranks{position:absolute;top:0;bottom:0;left:-20px;display:flex;flex-direction:column}.coordinates .ranks .rank-label{flex:1;display:flex;align-items:center;font-size:.875rem;color:var(--text-muted)}.board-controls{display:flex;justify-content:center;gap:1rem;margin-top:1rem}.board-controls .control-btn{padding:.5rem 1rem;background-color:var(--bg-secondary);border:1px solid var(--border-color);border-radius:.375rem;color:var(--text-secondary);cursor:pointer;transition:all .2s ease}.board-controls .control-btn:hover{background-color:var(--bg-tertiary);color:var(--text-primary)}.right-panel{display:flex;flex-direction:column;gap:1.5rem}.game-info{background-color:var(--bg-secondary);border:1px solid var(--border-color);border-radius:.5rem;overflow:hidden}.player-info{display:flex;justify-content:space-between;align-items:center;padding:1rem;border-bottom:1px solid var(--border-color)}.player-info:last-child{border-bottom:none}.player-info .player-name{font-weight:500;color:var(--text-primary)}.player-info .player-time{font-family:"Monaco","Menlo",monospace;font-size:1.25rem;color:var(--accent-primary)}.notation-table{background-color:var(--bg-secondary);border:1px solid var(--border-color);border-radius:.5rem;overflow:hidden}.notation-header{display:flex;justify-content:space-between;align-items:center;padding:1rem;background-color:var(--bg-tertiary);border-bottom:1px solid var(--border-color)}.notation-header .header-title{font-weight:500;color:var(--text-primary)}.notation-header .notation-controls{display:flex;gap:.25rem}.notation-header .notation-controls .notation-btn{width:2rem;height:2rem;background-color:rgba(0,0,0,0);border:1px solid var(--border-color);border-radius:.25rem;color:var(--text-secondary);cursor:pointer;display:flex;align-items:center;justify-content:center;transition:all .2s ease}.notation-header .notation-controls .notation-btn:hover{background-color:var(--bg-primary);color:var(--text-primary)}.notation-body{max-height:300px;overflow-y:auto}.moves-list{padding:.5rem}.move-row{display:grid;grid-template-columns:2rem 1fr 1fr;gap:.5rem;padding:.25rem;border-radius:.25rem}.move-row:hover{background-color:var(--bg-tertiary)}.move-number{font-size:.875rem;color:var(--text-muted);text-align:right}.move-item{padding:.25rem .5rem;border-radius:.25rem;cursor:pointer;transition:all .2s ease;font-family:"Monaco","Menlo",monospace;font-size:.875rem}.move-item:hover{background-color:var(--accent-primary);color:#fff}.move-item.current-move{background-color:var(--accent-secondary);color:#fff}.game-panel{background-color:var(--bg-secondary);border:1px solid var(--border-color);border-radius:.5rem;padding:1.5rem}.game-status{text-align:center;margin-bottom:1.5rem}.game-status .status-text{font-size:1.125rem;font-weight:500;margin-bottom:.5rem}.game-status .turn-indicator{display:flex;justify-content:center;gap:.5rem}.game-status .turn-indicator .turn-white,.game-status .turn-indicator .turn-black{width:1rem;height:1rem;border-radius:50%;border:2px solid var(--border-color);transition:all .2s ease}.game-status .turn-indicator .turn-white.active,.game-status .turn-indicator .turn-black.active{border-color:var(--accent-primary);box-shadow:0 0 0 2px rgba(74,158,255,.3)}.game-status .turn-indicator .turn-white{background-color:#fff}.game-status .turn-indicator .turn-black{background-color:#333}.game-actions{display:flex;flex-direction:column;gap:1rem;margin-bottom:1.5rem}.game-actions .action-group{display:flex;gap:.5rem}.game-actions .action-group .action-btn{flex:1;display:flex;flex-direction:column;align-items:center;gap:.25rem;padding:.75rem;background-color:var(--bg-tertiary);border:1px solid var(--border-color);border-radius:.375rem;color:var(--text-secondary);cursor:pointer;transition:all .2s ease}.game-actions .action-group .action-btn:hover{background-color:var(--bg-primary);color:var(--text-primary);transform:translateY(-1px)}.game-actions .action-group .action-btn .btn-icon{font-size:1.25rem}.game-actions .action-group .action-btn .btn-text{font-size:.75rem;text-transform:uppercase;letter-spacing:.05em}.game-actions .action-group .action-btn:disabled{opacity:.5;cursor:not-allowed;transform:none}.game-features .feature-group{margin-bottom:1.5rem}.game-features .feature-group h4{margin-bottom:.5rem;font-size:.875rem;font-weight:500;color:var(--text-primary)}.game-features .feature-group select,.game-features .feature-group input{width:100%;padding:.5rem;background-color:var(--bg-tertiary);border:1px solid var(--border-color);border-radius:.25rem;color:var(--text-primary);font-size:.875rem}.game-features .feature-group select:focus,.game-features .feature-group input:focus{outline:none;border-color:var(--accent-primary);box-shadow:0 0 0 2px rgba(74,158,255,.2)}.game-features .feature-group.hidden{display:none}.game-features .difficulty-slider{display:flex;align-items:center;gap:.5rem}.game-features .difficulty-slider .difficulty-range{flex:1}.game-features .difficulty-slider .difficulty-value{min-width:2rem;text-align:center;font-weight:500}.game-features .time-inputs{display:grid;grid-template-columns:1fr 1fr;gap:.5rem}.game-features .time-inputs .time-input label{display:block;margin-bottom:.25rem;font-size:.75rem;color:var(--text-muted)}.log-console h4{margin-bottom:.5rem;font-size:.875rem;font-weight:500;color:var(--text-primary)}.log-console .log-content{max-height:200px;overflow-y:auto;background-color:var(--bg-tertiary);border:1px solid var(--border-color);border-radius:.25rem;padding:.5rem}.log-console .log-content .log-entry{font-size:.75rem;color:var(--text-muted);margin-bottom:.25rem;font-family:"Monaco","Menlo",monospace}.log-console .log-content .log-entry:last-child{margin-bottom:0}.modal{position:fixed;inset:0;z-index:1000}.modal.hidden{display:none}.modal .modal-backdrop{position:absolute;inset:0;background-color:rgba(0,0,0,.5);display:flex;align-items:center;justify-content:center;padding:2rem}.modal .modal-content{background-color:var(--bg-secondary);border:1px solid var(--border-color);border-radius:.5rem;max-width:600px;width:100%;max-height:90vh;overflow:hidden;display:flex;flex-direction:column;box-shadow:0 20px 25px -5px rgba(0,0,0,.1),0 10px 10px -5px rgba(0,0,0,.04)}.modal .modal-content.appearance-modal{max-width:800px}.modal .modal-header{display:flex;justify-content:space-between;align-items:center;padding:1.5rem;border-bottom:1px solid var(--border-color)}.modal .modal-header h2{font-size:1.25rem;font-weight:600;color:var(--text-primary)}.modal .modal-header .close-btn{width:2rem;height:2rem;background-color:rgba(0,0,0,0);border:none;border-radius:.25rem;color:var(--text-muted);cursor:pointer;font-size:1.5rem;transition:all .2s ease}.modal .modal-header .close-btn:hover{background-color:var(--bg-tertiary);color:var(--text-primary)}.modal .modal-body{flex:1;padding:1.5rem;overflow-y:auto}.modal .modal-footer{display:flex;justify-content:flex-end;gap:1rem;padding:1.5rem;border-top:1px solid var(--border-color)}.modal .modal-footer .btn{padding:.5rem 1rem;border-radius:.375rem;border:1px solid rgba(0,0,0,0);cursor:pointer;font-weight:500;transition:all .2s ease}.modal .modal-footer .btn.btn-primary{background-color:var(--accent-primary);color:#fff}.modal .modal-footer .btn.btn-primary:hover{background-color:#3a8bef}.modal .modal-footer .btn.btn-secondary{background-color:var(--bg-tertiary);border-color:var(--border-color);color:var(--text-secondary)}.modal .modal-footer .btn.btn-secondary:hover{background-color:var(--bg-primary);color:var(--text-primary)}.settings-section{margin-bottom:2rem}.settings-section h3{margin-bottom:1rem;font-size:1.125rem;font-weight:500;color:var(--text-primary);border-bottom:1px solid var(--border-color);padding-bottom:.5rem}.settings-section .setting-item{margin-bottom:1.5rem}.settings-section .setting-item .setting-label{display:flex;align-items:center;gap:.5rem;margin-bottom:.25rem;cursor:pointer}.settings-section .setting-item .setting-label .setting-text{font-weight:500;color:var(--text-primary)}.settings-section .setting-item .setting-description{font-size:.875rem;color:var(--text-muted);margin-left:1.75rem}.settings-section .setting-item .setting-slider .setting-range{width:100%;margin-bottom:.5rem}.settings-section .setting-item .setting-slider .slider-labels{display:flex;justify-content:space-between;font-size:.75rem;color:var(--text-muted)}.settings-section .setting-item .setting-select{width:100%;padding:.5rem;background-color:var(--bg-tertiary);border:1px solid var(--border-color);border-radius:.25rem;color:var(--text-primary)}.settings-section .setting-item .setting-button{padding:.5rem 1rem;background-color:var(--bg-tertiary);border:1px solid var(--border-color);border-radius:.375rem;color:var(--text-secondary);cursor:pointer;transition:all .2s ease}.settings-section .setting-item .setting-button:hover{background-color:var(--bg-primary);color:var(--text-primary)}.appearance-section{margin-bottom:2rem}.appearance-section h3{margin-bottom:1rem;font-size:1.125rem;font-weight:500;color:var(--text-primary);border-bottom:1px solid var(--border-color);padding-bottom:.5rem}.theme-grid{display:grid;grid-template-columns:repeat(auto-fit, minmax(120px, 1fr));gap:1rem}.theme-option{display:flex;flex-direction:column;align-items:center;gap:.5rem;padding:1rem;border:2px solid var(--border-color);border-radius:.5rem;cursor:pointer;transition:all .2s ease}.theme-option:hover{border-color:var(--accent-primary)}.theme-option.selected{border-color:var(--accent-primary);background-color:rgba(74,158,255,.1)}.theme-option .theme-preview{display:grid;grid-template-columns:1fr 1fr;grid-template-rows:1fr 1fr;width:40px;height:40px;border-radius:.25rem;overflow:hidden}.theme-option .theme-label{font-size:.875rem;color:var(--text-primary);text-align:center}.piece-grid{display:grid;grid-template-columns:repeat(auto-fit, minmax(100px, 1fr));gap:1rem}.piece-option{display:flex;flex-direction:column;align-items:center;gap:.5rem;padding:1rem;border:2px solid var(--border-color);border-radius:.5rem;cursor:pointer;transition:all .2s ease}.piece-option:hover{border-color:var(--accent-primary)}.piece-option.selected{border-color:var(--accent-primary);background-color:rgba(74,158,255,.1)}.piece-option .piece-preview .piece-sample{font-size:1.5rem}.piece-option .piece-label{font-size:.875rem;color:var(--text-primary);text-align:center}.mini-board{display:grid;grid-template-columns:repeat(8, 1fr);grid-template-rows:repeat(8, 1fr);width:200px;height:200px;border:1px solid var(--border-color);border-radius:.25rem;overflow:hidden;margin:0 auto}.mini-board .preview-square{display:flex;align-items:center;justify-content:center;font-size:.75rem}.mini-board .preview-square.light{background-color:#f0d9b5}.mini-board .preview-square.dark{background-color:#b58863}.promotion-dialog{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);background-color:var(--bg-secondary);border:2px solid var(--border-color);border-radius:.5rem;padding:1rem;z-index:1001;box-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -2px rgba(0,0,0,.05)}.promotion-dialog .promotion-pieces{display:flex;gap:.5rem}.promotion-dialog .promotion-pieces .promotion-piece{width:60px;height:60px;display:flex;align-items:center;justify-content:center;font-size:2.5rem;background-color:var(--bg-tertiary);border:2px solid var(--border-color);border-radius:.375rem;cursor:pointer;transition:all .2s ease}.promotion-dialog .promotion-pieces .promotion-piece:hover{border-color:var(--accent-primary);transform:scale(1.05)}.hidden{display:none !important}@media(max-width: 1024px){.game-container{grid-template-columns:1fr;gap:1.5rem}.chess-board{width:100%;max-width:480px;height:auto;aspect-ratio:1}.app-header{padding:1rem}.app-main{padding:1rem}}@media(max-width: 768px){.app-header .app-nav .nav-btn{padding:.375rem .75rem;font-size:.875rem}.chess-board{max-width:360px}.game-actions .action-group .action-btn{padding:.5rem}.game-actions .action-group .action-btn .btn-text{font-size:.625rem}.modal .modal-backdrop{padding:1rem}.modal .modal-content{max-height:95vh}}.captured-pieces-section{margin:.5rem 0}.captured-pieces-container{display:flex;flex-direction:column;gap:.5rem}.captured-pieces{display:flex;flex-direction:column;gap:.25rem}.captured-section{display:flex;align-items:center;gap:.5rem;position:relative}.captured-section .captured-label{font-size:.75rem;color:var(--text-muted);min-width:80px;display:none}.captured-section .captured-list{display:flex;flex-wrap:wrap;gap:.125rem;align-items:center;min-height:1.5rem}.captured-section .captured-list .captured-piece{font-size:1.25rem;line-height:1;opacity:.8;transition:opacity .2s ease}.captured-section .captured-list .captured-piece:hover{opacity:1}.captured-section .material-advantage{font-size:.75rem;font-weight:600;color:var(--accent-secondary);background:var(--bg-tertiary);padding:.125rem .25rem;border-radius:.25rem;margin-left:.5rem}.player-info{display:flex;flex-direction:column;gap:.25rem;padding:.75rem;background:var(--bg-secondary);border-radius:.5rem;border:1px solid var(--border-color)}.player-info.black-player{margin-bottom:1rem}.player-info.white-player{margin-top:1rem}.player-info .player-name{font-weight:600;font-size:.875rem}.player-info .player-time{font-size:1.25rem;font-weight:700;font-family:"Courier New",monospace;color:var(--text-secondary)}.left-panel{display:flex;flex-direction:column;align-items:center;gap:.5rem}',""]);const r=o}},t={};function a(n){var i=t[n];if(void 0!==i)return i.exports;var s=t[n]={id:n,exports:{}};return e[n](s,s.exports,a),s.exports}a.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return a.d(t,{a:t}),t},a.d=(e,t)=>{for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.nc=void 0;class n{static squareToPosition(e){return{file:e[0],rank:parseInt(e[1])}}static positionToSquare(e){return`${e.file}${e.rank}`}static positionToIndex(e){const t=this.files.indexOf(e.file);return{row:8-e.rank,col:t}}static indexToPosition(e,t){return{file:this.files[t],rank:8-e}}static squareToIndex(e){return this.positionToIndex(this.squareToPosition(e))}static indexToSquare(e,t){return this.positionToSquare(this.indexToPosition(e,t))}static isValidSquare(e){if(2!==e.length)return!1;const t=e[0],a=e[1];return this.files.includes(t)&&this.ranks.includes(parseInt(a))}static isValidPosition(e){return this.files.includes(e.file)&&this.ranks.includes(e.rank)}static getDistance(e,t){return{dx:this.files.indexOf(t.file)-this.files.indexOf(e.file),dy:t.rank-e.rank}}static isOnSameDiagonal(e,t){const{dx:a,dy:n}=this.getDistance(e,t);return Math.abs(a)===Math.abs(n)}static isOnSameRankOrFile(e,t){return e.file===t.file||e.rank===t.rank}static getSquaresBetween(e,t){const a=this.squareToPosition(e),n=this.squareToPosition(t),{dx:i,dy:s}=this.getDistance(a,n),o=[],r=Math.max(Math.abs(i),Math.abs(s));if(0===r)return o;const c=0===i?0:i/Math.abs(i),l=0===s?0:s/Math.abs(s);for(let e=1;e<r;e++){const t=this.files[this.files.indexOf(a.file)+e*c],n=a.rank+e*l;t&&this.ranks.includes(n)&&o.push(this.positionToSquare({file:t,rank:n}))}return o}static flipSquare(e){const t=this.squareToPosition(e),a=9-t.rank;return this.positionToSquare({file:t.file,rank:a})}static getSquareColor(e){const t=this.squareToPosition(e);return(this.files.indexOf(t.file)+t.rank)%2==0?"dark":"light"}}n.files=["a","b","c","d","e","f","g","h"],n.ranks=[1,2,3,4,5,6,7,8];class i{constructor(e){this.gameState=this.initializeGame(e)}initializeGame(e){const t=e||"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";return{board:this.fenToBoard(t),currentPlayer:this.fenToCurrentPlayer(t),castlingRights:this.fenToCastlingRights(t),enPassantTarget:this.fenToEnPassantTarget(t),halfmoveClock:this.fenToHalfmoveClock(t),fullmoveNumber:this.fenToFullmoveNumber(t),moves:[],isCheck:!1,isCheckmate:!1,isStalemate:!1,isDraw:!1,fen:t}}fenToBoard(e){const t=Array(8).fill(null).map(()=>Array(8).fill(null)),a=e.split(" ")[0].split("/");for(let e=0;e<8;e++){let n=0;for(const i of a[e])i>="1"&&i<="8"?n+=parseInt(i):(t[e][n]=this.charToPiece(i),n++)}return t}charToPiece(e){const t=e===e.toLowerCase()?"black":"white";return{type:this.charToPieceType(e.toLowerCase()),color:t}}charToPieceType(e){return{k:"king",q:"queen",r:"rook",b:"bishop",n:"knight",p:"pawn"}[e]}pieceToChar(e){const t={king:"k",queen:"q",rook:"r",bishop:"b",knight:"n",pawn:"p"}[e.type];return"white"===e.color?t.toUpperCase():t}fenToCurrentPlayer(e){return"w"===e.split(" ")[1]?"white":"black"}fenToCastlingRights(e){const t=e.split(" ")[2];return{whiteKingside:t.includes("K"),whiteQueenside:t.includes("Q"),blackKingside:t.includes("k"),blackQueenside:t.includes("q")}}fenToEnPassantTarget(e){const t=e.split(" ")[3];return"-"===t?null:t}fenToHalfmoveClock(e){return parseInt(e.split(" ")[4])}fenToFullmoveNumber(e){return parseInt(e.split(" ")[5])}getGameState(){return{...this.gameState}}getPiece(e){const{row:t,col:a}=n.squareToIndex(e);return this.gameState.board[t][a]}makeMove(e,t,a){if(!this.isValidMove(e,t,a))return null;const n={from:e,to:t,piece:this.getPiece(e),capturedPiece:this.getPiece(t)||void 0,promotion:a,timestamp:Date.now(),san:"",fen:""};return this.executeMove(n),n.san=this.calculateSAN(n),n.fen=this.calculateFEN(),this.gameState.moves.push(n),this.gameState.fen=n.fen,this.gameState.currentPlayer="white"===this.gameState.currentPlayer?"black":"white",this.updateGameStatus(),n}executeMove(e){const{from:t,to:a,piece:i,promotion:s}=e,{row:o,col:r}=n.squareToIndex(t),{row:c,col:l}=n.squareToIndex(a);"king"!==i.type||2!==Math.abs(r-l)?"pawn"!==i.type||a!==this.gameState.enPassantTarget?(this.gameState.board[o][r]=null,this.gameState.board[c][l]=s?{type:s,color:i.color}:i,this.updateCastlingRights(e),this.updateEnPassantTarget(e),this.updateClocks(e)):this.executeEnPassant(e):this.executeCastling(e)}executeCastling(e){const{from:t,to:a,piece:i}=e,{row:s,col:o}=n.squareToIndex(t),{row:r,col:c}=n.squareToIndex(a);this.gameState.board[s][o]=null,this.gameState.board[r][c]=i,c>o?(this.gameState.board[r][7]=null,this.gameState.board[r][5]={type:"rook",color:i.color},e.castling="kingside"):(this.gameState.board[r][0]=null,this.gameState.board[r][3]={type:"rook",color:i.color},e.castling="queenside"),"white"===i.color?(this.gameState.castlingRights.whiteKingside=!1,this.gameState.castlingRights.whiteQueenside=!1):(this.gameState.castlingRights.blackKingside=!1,this.gameState.castlingRights.blackQueenside=!1)}executeEnPassant(e){const{from:t,to:a,piece:i}=e,{row:s,col:o}=n.squareToIndex(t),{row:r,col:c}=n.squareToIndex(a);this.gameState.board[s][o]=null,this.gameState.board[r][c]=i;const l="white"===i.color?r+1:r-1;this.gameState.board[l][c]=null,e.enPassant=!0}updateCastlingRights(e){const{from:t,piece:a}=e;"king"===a.type&&("white"===a.color?(this.gameState.castlingRights.whiteKingside=!1,this.gameState.castlingRights.whiteQueenside=!1):(this.gameState.castlingRights.blackKingside=!1,this.gameState.castlingRights.blackQueenside=!1)),"rook"===a.type&&("a1"===t&&(this.gameState.castlingRights.whiteQueenside=!1),"h1"===t&&(this.gameState.castlingRights.whiteKingside=!1),"a8"===t&&(this.gameState.castlingRights.blackQueenside=!1),"h8"===t&&(this.gameState.castlingRights.blackKingside=!1))}updateEnPassantTarget(e){const{from:t,to:a,piece:i}=e;if("pawn"===i.type){const e=n.squareToPosition(t),i=n.squareToPosition(a);if(2===Math.abs(i.rank-e.rank)){const t=(e.rank+i.rank)/2;return void(this.gameState.enPassantTarget=n.positionToSquare({file:e.file,rank:t}))}}this.gameState.enPassantTarget=null}updateClocks(e){"pawn"===e.piece.type||e.capturedPiece?this.gameState.halfmoveClock=0:this.gameState.halfmoveClock++,"black"===this.gameState.currentPlayer&&this.gameState.fullmoveNumber++}isValidMove(e,t,a){const n=this.getPiece(e);return!!n&&(n.color===this.gameState.currentPlayer&&this.getLegalMoves(e).some(e=>e.to===t&&e.promotion===a))}getLegalMoves(e){const t=this.getPiece(e);return t&&t.color===this.gameState.currentPlayer?this.getPseudoLegalMoves(e).filter(t=>!this.wouldBeInCheck(e,t.to,t.promotion)):[]}getPseudoLegalMoves(e){const t=this.getPiece(e);if(!t)return[];switch(t.type){case"pawn":return this.getPawnMoves(e);case"rook":return this.getRookMoves(e);case"bishop":return this.getBishopMoves(e);case"queen":return this.getQueenMoves(e);case"knight":return this.getKnightMoves(e);case"king":return this.getKingMoves(e);default:return[]}}getPawnMoves(e){const t=[],a=this.getPiece(e),i=n.squareToPosition(e),s="white"===a.color?1:-1,o="white"===a.color?2:7,r="white"===a.color?8:1,c=n.positionToSquare({file:i.file,rank:i.rank+s});if(n.isValidSquare(c)&&!this.getPiece(c)&&(i.rank+s===r?["queen","rook","bishop","knight"].forEach(e=>{t.push({to:c,promotion:e})}):t.push({to:c}),i.rank===o)){const e=n.positionToSquare({file:i.file,rank:i.rank+2*s});this.getPiece(e)||t.push({to:e})}const l=n.files,d=l.indexOf(i.file);return[-1,1].forEach(e=>{const o=d+e;if(o>=0&&o<8){const e=n.positionToSquare({file:l[o],rank:i.rank+s});if(n.isValidSquare(e)){const n=this.getPiece(e);n&&n.color!==a.color&&(i.rank+s===r?["queen","rook","bishop","knight"].forEach(a=>{t.push({to:e,promotion:a})}):t.push({to:e})),e===this.gameState.enPassantTarget&&t.push({to:e})}}}),t}getRookMoves(e){return this.getSlidingMoves(e,[[0,1],[0,-1],[1,0],[-1,0]])}getBishopMoves(e){return this.getSlidingMoves(e,[[1,1],[1,-1],[-1,1],[-1,-1]])}getQueenMoves(e){return this.getSlidingMoves(e,[[0,1],[0,-1],[1,0],[-1,0],[1,1],[1,-1],[-1,1],[-1,-1]])}getSlidingMoves(e,t){const a=[],i=this.getPiece(e),{row:s,col:o}=n.squareToIndex(e);return t.forEach(([e,t])=>{for(let r=1;r<8;r++){const c=s+r*e,l=o+r*t;if(c<0||c>=8||l<0||l>=8)break;const d=n.indexToSquare(c,l),h=this.getPiece(d);if(h){h.color!==i.color&&a.push({to:d});break}a.push({to:d})}}),a}getKnightMoves(e){const t=[],a=this.getPiece(e),{row:i,col:s}=n.squareToIndex(e);return[[-2,-1],[-2,1],[-1,-2],[-1,2],[1,-2],[1,2],[2,-1],[2,1]].forEach(([e,o])=>{const r=i+e,c=s+o;if(r>=0&&r<8&&c>=0&&c<8){const e=n.indexToSquare(r,c),i=this.getPiece(e);i&&i.color===a.color||t.push({to:e})}}),t}getKingMoves(e){const t=[],a=this.getPiece(e),{row:i,col:s}=n.squareToIndex(e);if([[-1,-1],[-1,0],[-1,1],[0,-1],[0,1],[1,-1],[1,0],[1,1]].forEach(([e,o])=>{const r=i+e,c=s+o;if(r>=0&&r<8&&c>=0&&c<8){const e=n.indexToSquare(r,c),i=this.getPiece(e);i&&i.color===a.color||t.push({to:e})}}),!this.isInCheck(a.color)){if(this.canCastleKingside(a.color)){const e="white"===a.color?"g1":"g8";t.push({to:e})}if(this.canCastleQueenside(a.color)){const e="white"===a.color?"c1":"c8";t.push({to:e})}}return t}canCastleKingside(e){const t=this.gameState.castlingRights;if(!("white"===e?t.whiteKingside:t.blackKingside))return!1;const a="white"===e?"1":"8",n=[`f${a}`,`g${a}`];return!n.some(e=>this.getPiece(e))&&!n.some(t=>this.isSquareAttacked(t,"white"===e?"black":"white"))}canCastleQueenside(e){const t=this.gameState.castlingRights;if(!("white"===e?t.whiteQueenside:t.blackQueenside))return!1;const a="white"===e?"1":"8";return![`b${a}`,`c${a}`,`d${a}`].some(e=>this.getPiece(e))&&![`c${a}`,`d${a}`].some(t=>this.isSquareAttacked(t,"white"===e?"black":"white"))}wouldBeInCheck(e,t,a){const i=this.getPiece(e),s=this.getPiece(t),o=this.gameState.enPassantTarget;if(!i)return!0;const{row:r,col:c}=n.squareToIndex(e),{row:l,col:d}=n.squareToIndex(t);this.gameState.board[r][c]=null,this.gameState.board[l][d]=a?{type:a,color:i.color}:i;let h=null;if("pawn"===i.type&&t===o){const e="white"===i.color?l+1:l-1;h=this.gameState.board[e][d],this.gameState.board[e][d]=null}const p=this.isInCheck(i.color);if(this.gameState.board[r][c]=i,this.gameState.board[l][d]=s,h){const e="white"===i.color?l+1:l-1;this.gameState.board[e][d]=h}return p}isInCheck(e){const t=this.findKing(e);return!!t&&this.isSquareAttacked(t,"white"===e?"black":"white")}findKing(e){for(let t=0;t<8;t++)for(let a=0;a<8;a++){const i=this.gameState.board[t][a];if(i&&"king"===i.type&&i.color===e)return n.indexToSquare(t,a)}return null}isSquareAttacked(e,t){for(let a=0;a<8;a++)for(let i=0;i<8;i++){const s=this.gameState.board[a][i];if(s&&s.color===t){const t=n.indexToSquare(a,i);if(this.canPieceAttackSquare(t,e))return!0}}return!1}canPieceAttackSquare(e,t){const a=this.getPiece(e);if(!a)return!1;const i=n.squareToPosition(e),s=n.squareToPosition(t),{dx:o,dy:r}=n.getDistance(i,s);switch(a.type){case"pawn":return r===("white"===a.color?1:-1)&&1===Math.abs(o);case"rook":return(0===o||0===r)&&this.isPathClear(e,t);case"bishop":return Math.abs(o)===Math.abs(r)&&this.isPathClear(e,t);case"queen":return(0===o||0===r||Math.abs(o)===Math.abs(r))&&this.isPathClear(e,t);case"knight":return 2===Math.abs(o)&&1===Math.abs(r)||1===Math.abs(o)&&2===Math.abs(r);case"king":return Math.abs(o)<=1&&Math.abs(r)<=1;default:return!1}}isPathClear(e,t){return n.getSquaresBetween(e,t).every(e=>!this.getPiece(e))}updateGameStatus(){const e=this.gameState.currentPlayer,t=this.isInCheck(e),a=this.hasLegalMoves(e);this.gameState.isCheck=t,this.gameState.isCheckmate=t&&!a,this.gameState.isStalemate=!t&&!a,this.gameState.isDraw=this.gameState.isStalemate||this.isDrawByFiftyMoveRule()||this.isDrawByInsufficientMaterial()||this.isDrawByThreefoldRepetition()}hasLegalMoves(e){for(let t=0;t<8;t++)for(let a=0;a<8;a++){const i=this.gameState.board[t][a];if(i&&i.color===e){const e=n.indexToSquare(t,a);if(this.getLegalMoves(e).length>0)return!0}}return!1}isDrawByFiftyMoveRule(){return this.gameState.halfmoveClock>=100}isDrawByInsufficientMaterial(){const e=[];for(let t=0;t<8;t++)for(let a=0;a<8;a++){const n=this.gameState.board[t][a];n&&e.push(n)}if(2===e.length)return!0;if(3===e.length){const t=e.filter(e=>"king"!==e.type);return 1===t.length&&("bishop"===t[0].type||"knight"===t[0].type)}return!1}isDrawByThreefoldRepetition(){const e=this.calculateFEN(),t=this.gameState.moves.map(e=>e.fen);t.push(e);const a=t.reduce((e,t)=>(e[t]=(e[t]||0)+1,e),{});return Object.values(a).some(e=>e>=3)}calculateSAN(e){const{piece:t,to:a,capturedPiece:n,promotion:i,castling:s}=e;if(s)return"kingside"===s?"O-O":"O-O-O";let o="";"pawn"!==t.type&&(o+=t.type.charAt(0).toUpperCase()),n&&("pawn"===t.type&&(o+=e.from.charAt(0)),o+="x"),o+=a,i&&(o+="="+i.charAt(0).toUpperCase());const r="white"===t.color?"black":"white";return this.isInCheck(r)&&(o+=this.gameState.isCheckmate?"#":"+"),o}calculateFEN(){let e="";for(let t=0;t<8;t++){let a=0;for(let n=0;n<8;n++){const i=this.gameState.board[t][n];i?(a>0&&(e+=a,a=0),e+=this.pieceToChar(i)):a++}a>0&&(e+=a),t<7&&(e+="/")}e+=" "+("white"===this.gameState.currentPlayer?"w":"b");let t="";return this.gameState.castlingRights.whiteKingside&&(t+="K"),this.gameState.castlingRights.whiteQueenside&&(t+="Q"),this.gameState.castlingRights.blackKingside&&(t+="k"),this.gameState.castlingRights.blackQueenside&&(t+="q"),e+=` ${t||"-"}`,e+=` ${this.gameState.enPassantTarget||"-"}`,e+=` ${this.gameState.halfmoveClock}`,e+=` ${this.gameState.fullmoveNumber}`,e}getAllLegalMoves(){const e=[];for(let t=0;t<8;t++)for(let a=0;a<8;a++){const i=this.gameState.board[t][a];if(i&&i.color===this.gameState.currentPlayer){const i=n.indexToSquare(t,a);this.getLegalMoves(i).forEach(t=>{e.push({from:i,...t})})}}return e}undoMove(){if(0===this.gameState.moves.length)return null;const e=this.gameState.moves.pop(),t=this.gameState.moves.length>0?this.gameState.moves[this.gameState.moves.length-1].fen:"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";this.gameState=this.initializeGame(t);const a=[...this.gameState.moves];return this.gameState.moves=[],a.forEach(e=>{this.makeMove(e.from,e.to,e.promotion)}),e}isGameOver(){return this.gameState.isCheckmate||this.gameState.isDraw}getGameResult(){return this.gameState.isCheckmate?"white"===this.gameState.currentPlayer?"black-wins":"white-wins":this.gameState.isDraw?"draw":"*"}}class s{constructor(e,t,a,n){this.isFlipped=!1,this.selectedSquare=null,this.draggedPiece=null,this.legalMoves=[],this.promotionCallback=null,this.container=e,this.engine=t,this.settings=a,this.moveCallback=n,this.createBoard(),this.setupEventListeners(),this.updatePosition()}createBoard(){this.container.innerHTML=`\n      <div class="chess-board-container">\n        <div class="chess-board" data-theme="${this.settings.boardTheme}">\n          ${this.createSquares()}\n        </div>\n        ${this.settings.showCoordinates?this.createCoordinates():""}\n      </div>\n    `,this.boardElement=this.container.querySelector(".chess-board")}createSquares(){let e="";for(let t=0;t<8;t++)for(let a=0;a<8;a++)e+=`\n          <div \n            class="chess-square ${(t+a)%2==1?"light":"dark"}" \n            data-square="${n.indexToSquare(t,a)}"\n            data-row="${t}"\n            data-col="${a}"\n          >\n            <div class="piece-container"></div>\n          </div>\n        `;return e}createCoordinates(){const e=this.isFlipped?["h","g","f","e","d","c","b","a"]:["a","b","c","d","e","f","g","h"],t=this.isFlipped?["1","2","3","4","5","6","7","8"]:["8","7","6","5","4","3","2","1"];return`\n      <div class="coordinates">\n        <div class="files">\n          ${e.map(e=>`<div class="file-label">${e}</div>`).join("")}\n        </div>\n        <div class="ranks">\n          ${t.map(e=>`<div class="rank-label">${e}</div>`).join("")}\n        </div>\n      </div>\n    `}setupEventListeners(){this.boardElement.addEventListener("mousedown",this.handleMouseDown.bind(this)),this.boardElement.addEventListener("mousemove",this.handleMouseMove.bind(this)),this.boardElement.addEventListener("mouseup",this.handleMouseUp.bind(this)),this.boardElement.addEventListener("click",this.handleClick.bind(this)),this.boardElement.addEventListener("touchstart",this.handleTouchStart.bind(this)),this.boardElement.addEventListener("touchmove",this.handleTouchMove.bind(this)),this.boardElement.addEventListener("touchend",this.handleTouchEnd.bind(this)),this.boardElement.addEventListener("contextmenu",e=>e.preventDefault())}handleMouseDown(e){if(0!==e.button)return;const t=this.getSquareFromEvent(e);if(!t)return;const a=this.engine.getPiece(t);a&&a.color===this.engine.getGameState().currentPlayer&&this.startDrag(t,a,e)}handleMouseMove(e){this.draggedPiece&&this.updateDragPosition(e)}handleMouseUp(e){if(this.draggedPiece){const t=this.getSquareFromEvent(e);this.endDrag(t)}}handleClick(e){const t=this.getSquareFromEvent(e);t&&(this.selectedSquare?this.selectedSquare===t?this.clearSelection():this.attemptMove(this.selectedSquare,t):this.selectSquare(t))}handleTouchStart(e){e.preventDefault();const t=e.touches[0],a=this.getSquareFromTouch(t);if(a){const e=this.engine.getPiece(a);e&&e.color===this.engine.getGameState().currentPlayer&&this.startDrag(a,e,t)}}handleTouchMove(e){if(e.preventDefault(),this.draggedPiece){const t=e.touches[0];this.updateDragPosition(t)}}handleTouchEnd(e){if(e.preventDefault(),this.draggedPiece){const t=e.changedTouches[0],a=this.getSquareFromTouch(t);this.endDrag(a)}}getSquareFromEvent(e){const t=e.target.closest(".chess-square");return t?.dataset.square||null}getSquareFromTouch(e){const t=document.elementFromPoint(e.clientX,e.clientY),a=t?.closest(".chess-square");return a?.dataset.square||null}startDrag(e,t,a){this.draggedPiece={piece:t,square:e},this.selectSquare(e);const n=this.createPieceElement(t);n.classList.add("dragged-piece"),this.container.appendChild(n),this.updateDragPosition(a)}updateDragPosition(e){if(!this.draggedPiece)return;const t=this.container.querySelector(".dragged-piece");if(t){const a=this.container.getBoundingClientRect();t.style.left=e.clientX-a.left-30+"px",t.style.top=e.clientY-a.top-30+"px"}}endDrag(e){if(!this.draggedPiece)return;const t=this.container.querySelector(".dragged-piece");t&&t.remove(),e&&e!==this.draggedPiece.square?this.attemptMove(this.draggedPiece.square,e):this.updatePosition(),this.draggedPiece=null}selectSquare(e){this.clearSelection(),this.selectedSquare=e;const t=this.getSquareElement(e);t?.classList.add("selected");const a=this.engine.getPiece(e);a&&a.color===this.engine.getGameState().currentPlayer&&(this.legalMoves=this.engine.getLegalMoves(e),this.highlightLegalMoves())}clearSelection(){this.boardElement.querySelectorAll(".selected").forEach(e=>{e.classList.remove("selected")}),this.boardElement.querySelectorAll(".legal-move, .legal-capture").forEach(e=>{e.classList.remove("legal-move","legal-capture")}),this.selectedSquare=null,this.legalMoves=[]}highlightLegalMoves(){this.settings.highlightLegalMoves&&this.legalMoves.forEach(e=>{const t=this.getSquareElement(e.to);if(t){const a=null!==this.engine.getPiece(e.to);t.classList.add(a?"legal-capture":"legal-move")}})}attemptMove(e,t){const a=this.engine.getPiece(e);if("pawn"===a?.type&&n.squareToPosition(t).rank===("white"===a.color?8:1)&&this.engine.isValidMove(e,t))return void this.showPromotionDialog(e,t);const i=this.engine.makeMove(e,t);i?(this.updatePosition(),this.clearSelection(),this.animateMove(i),this.moveCallback&&this.moveCallback(i)):this.clearSelection()}showPromotionDialog(e,t){const a=this.engine.getPiece(e),n=document.createElement("div");n.className="promotion-dialog",n.innerHTML=`\n      <div class="promotion-pieces">\n        ${["queen","rook","bishop","knight"].map(e=>`\n          <div class="promotion-piece" data-piece="${e}">\n            ${this.getPieceSymbol(e,a.color)}\n          </div>\n        `).join("")}\n      </div>\n    `,this.container.appendChild(n),this.promotionCallback=a=>{const i=this.engine.makeMove(e,t,a);i&&(this.updatePosition(),this.animateMove(i),this.moveCallback&&this.moveCallback(i)),this.clearSelection(),n.remove(),this.promotionCallback=null},n.addEventListener("click",e=>{const t=e.target.closest(".promotion-piece");t&&this.promotionCallback&&this.promotionCallback(t.dataset.piece)})}animateMove(e){0!==this.settings.animationSpeed&&(this.getSquareElement(e.from),this.getSquareElement(e.to))}updatePosition(){this.engine.getGameState();for(let e=0;e<8;e++)for(let t=0;t<8;t++){const a=n.indexToSquare(e,t),i=this.engine.getPiece(a),s=this.getSquareElement(a),o=s?.querySelector(".piece-container");o&&(i?(o.innerHTML=this.getPieceSymbol(i.type,i.color),o.className=`piece-container piece-${i.color} piece-${i.type}`):(o.innerHTML="",o.className="piece-container"))}}createPieceElement(e){const t=document.createElement("div");return t.className=`piece-element piece-${e.color} piece-${e.type}`,t.innerHTML=this.getPieceSymbol(e.type,e.color),t.style.position="absolute",t.style.pointerEvents="none",t.style.width="60px",t.style.height="60px",t.style.fontSize="48px",t.style.textAlign="center",t.style.lineHeight="60px",t.style.zIndex="1000",t}getPieceSymbol(e,t){return{king:{white:"♔",black:"♚"},queen:{white:"♕",black:"♛"},rook:{white:"♖",black:"♜"},bishop:{white:"♗",black:"♝"},knight:{white:"♘",black:"♞"},pawn:{white:"♙",black:"♟"}}[e]?.[t]||""}getSquareElement(e){return this.boardElement.querySelector(`[data-square="${e}"]`)}flipBoard(){if(this.isFlipped=!this.isFlipped,this.boardElement.classList.toggle("flipped",this.isFlipped),this.settings.showCoordinates){const e=this.container.querySelector(".coordinates");e&&(e.innerHTML=this.createCoordinates().replace(/<div class="coordinates">|<\/div>$/g,""))}}updateSettings(e){this.settings=e;const t=this.container.querySelector(".coordinates");e.showCoordinates&&!t?this.container.insertAdjacentHTML("beforeend",this.createCoordinates()):!e.showCoordinates&&t&&t.remove(),this.selectedSquare&&this.selectSquare(this.selectedSquare)}updateAppearance(e){this.settings=e,this.boardElement.setAttribute("data-theme",e.boardTheme)}reset(e){this.engine=e,this.clearSelection(),this.updatePosition()}}class o{constructor(e,t){this.moves=[],this.currentMoveIndex=-1,this.container=e,this.engine=t,this.createTable()}createTable(){this.container.innerHTML='\n      <div class="notation-table">\n        <div class="notation-header">\n          <span class="header-title">Moves</span>\n          <div class="notation-controls">\n            <button class="notation-btn" data-action="start" title="Go to start">⟲</button>\n            <button class="notation-btn" data-action="prev" title="Previous move">←</button>\n            <button class="notation-btn" data-action="next" title="Next move">→</button>\n            <button class="notation-btn" data-action="end" title="Go to end">⟳</button>\n          </div>\n        </div>\n        <div class="notation-body">\n          <div class="moves-list"></div>\n        </div>\n      </div>\n    ',this.tableElement=this.container.querySelector(".moves-list"),this.setupEventListeners()}setupEventListeners(){this.container.addEventListener("click",e=>{const t=e.target,a=t.dataset.action;a&&this.handleNavigation(a);const n=t.closest(".move-item");if(n){const e=parseInt(n.dataset.index);this.goToMove(e)}})}handleNavigation(e){switch(e){case"start":this.goToStart();break;case"prev":this.goToPreviousMove();break;case"next":this.goToNextMove();break;case"end":this.goToEnd()}}addMove(e){const t=this.engine.getGameState(),a=Math.ceil(t.moves.length/2),n="white"===e.piece.color;let i=this.moves.find(e=>e.moveNumber===a);i||(i={moveNumber:a},this.moves.push(i)),n?i.white=e:i.black=e,this.currentMoveIndex=t.moves.length-1,this.renderMoves()}removeLastMove(){const e=this.engine.getGameState();if(0===this.moves.length)return;const t=this.moves[this.moves.length-1];t.black?delete t.black:t.white&&(delete t.white,this.moves.pop()),this.currentMoveIndex=e.moves.length-1,this.renderMoves()}renderMoves(){this.tableElement.innerHTML="",this.moves.forEach((e,t)=>{const a=document.createElement("div");a.className="move-row";const n=document.createElement("div");n.className="move-number",n.textContent=`${e.moveNumber}.`,a.appendChild(n);const i=document.createElement("div");if(i.className="move-item white-move",e.white){const t=2*(e.moveNumber-1);i.textContent=e.white.san,i.dataset.index=t.toString(),i.title=`${e.white.from}-${e.white.to}`,t===this.currentMoveIndex&&i.classList.add("current-move")}a.appendChild(i);const s=document.createElement("div");if(s.className="move-item black-move",e.black){const t=2*(e.moveNumber-1)+1;s.textContent=e.black.san,s.dataset.index=t.toString(),s.title=`${e.black.from}-${e.black.to}`,t===this.currentMoveIndex&&s.classList.add("current-move")}a.appendChild(s),this.tableElement.appendChild(a)}),this.scrollToCurrentMove()}scrollToCurrentMove(){const e=this.tableElement.querySelector(".current-move");e&&e.scrollIntoView({behavior:"smooth",block:"nearest"})}goToMove(e){const t=this.engine.getGameState().moves.length;e<-1||e>=t||(this.currentMoveIndex=e,this.renderMoves())}goToStart(){this.goToMove(-1)}goToEnd(){const e=this.engine.getGameState();this.goToMove(e.moves.length-1)}goToPreviousMove(){this.goToMove(this.currentMoveIndex-1)}goToNextMove(){this.goToMove(this.currentMoveIndex+1)}reset(){this.moves=[],this.currentMoveIndex=-1,this.renderMoves()}exportPGN(){let e="";e+='[Event "Chess Platform Game"]\n',e+='[Site "Chess Platform"]\n',e+=`[Date "${(new Date).toISOString().split("T")[0]}"]\n`,e+='[Round "1"]\n',e+='[White "White Player"]\n',e+='[Black "Black Player"]\n',this.engine.getGameState();const t=this.engine.getGameResult();return e+=`[Result "${"*"===t?"*":t}"]\n\n`,this.moves.forEach(t=>{e+=`${t.moveNumber}.`,t.white&&(e+=` ${t.white.san}`),t.black&&(e+=` ${t.black.san}`),e+=" "}),e+="*"===t?"*":t,e.trim()}importPGN(e){try{const t=e.split("\n").find(e=>!e.startsWith("[")&&e.trim());if(!t)return!1;const a=/\d+\.\s*([^\s]+)(?:\s+([^\s]+))?/g;let n;for(this.reset();null!==(n=a.exec(t));)n[1],n[2];return!0}catch(e){return console.error("Failed to import PGN:",e),!1}}}class r{constructor(e,t){this.container=e,this.engine=t,this.createPanel()}createPanel(){this.container.innerHTML='\n      <div class="game-panel">\n        <div class="game-status">\n          <div class="status-text">White to move</div>\n          <div class="game-info-details">\n            <div class="turn-indicator">\n              <span class="turn-white active"></span>\n              <span class="turn-black"></span>\n            </div>\n          </div>\n        </div>\n        \n        <div class="game-actions">\n          <div class="action-group">\n            <button class="action-btn" data-action="offer-draw" title="Offer Draw">\n              <span class="btn-icon">🤝</span>\n              <span class="btn-text">Draw</span>\n            </button>\n            <button class="action-btn" data-action="resign" title="Resign">\n              <span class="btn-icon">🏳️</span>\n              <span class="btn-text">Resign</span>\n            </button>\n          </div>\n          \n          <div class="action-group">\n            <button class="action-btn" data-action="undo" title="Undo Move">\n              <span class="btn-icon">↶</span>\n              <span class="btn-text">Undo</span>\n            </button>\n            <button class="action-btn" data-action="abort" title="Abort Game">\n              <span class="btn-icon">⏹️</span>\n              <span class="btn-text">Abort</span>\n            </button>\n          </div>\n        </div>\n        \n        <div class="game-features">\n          <div class="feature-group">\n            <h4>Game Mode</h4>\n            <select class="game-mode-select">\n              <option value="solo">Play by Yourself</option>\n              <option value="friend">Play against Friend</option>\n              <option value="bot">Play against Bot</option>\n            </select>\n          </div>\n          \n          <div class="feature-group bot-settings hidden">\n            <h4>Bot Difficulty</h4>\n            <div class="difficulty-slider">\n              <input type="range" min="1" max="20" value="10" class="difficulty-range">\n              <span class="difficulty-value">10</span>\n            </div>\n          </div>\n          \n          <div class="feature-group">\n            <h4>Time Control</h4>\n            <select class="time-control-select">\n              <option value="unlimited">Unlimited</option>\n              <option value="blitz">Blitz (5+0)</option>\n              <option value="rapid">Rapid (10+0)</option>\n              <option value="classical">Classical (30+0)</option>\n              <option value="custom">Custom</option>\n            </select>\n          </div>\n          \n          <div class="feature-group custom-time hidden">\n            <div class="time-inputs">\n              <div class="time-input">\n                <label>Minutes</label>\n                <input type="number" min="1" max="180" value="10" class="initial-time">\n              </div>\n              <div class="time-input">\n                <label>Increment</label>\n                <input type="number" min="0" max="30" value="0" class="increment-time">\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class="log-console">\n          <h4>Game Log</h4>\n          <div class="log-content">\n            <div class="log-entry">Game started</div>\n          </div>\n        </div>\n      </div>\n    ',this.setupEventListeners()}setupEventListeners(){this.container.addEventListener("click",e=>{const t=e.target.closest(".action-btn");if(t){const e=t.dataset.action;e&&this.handleAction(e)}});const e=this.container.querySelector(".game-mode-select");e?.addEventListener("change",e=>{const t=e.target;this.handleGameModeChange(t.value)});const t=this.container.querySelector(".time-control-select");t?.addEventListener("change",e=>{const t=e.target;this.handleTimeControlChange(t.value)});const a=this.container.querySelector(".difficulty-range"),n=this.container.querySelector(".difficulty-value");a?.addEventListener("input",e=>{const t=e.target;n&&(n.textContent=t.value)})}handleAction(e){switch(e){case"offer-draw":this.offerDraw();break;case"resign":this.resign();break;case"undo":this.undoMove();break;case"abort":this.abortGame()}}handleGameModeChange(e){const t=this.container.querySelector(".bot-settings");"bot"===e?t?.classList.remove("hidden"):t?.classList.add("hidden"),this.addLogEntry(`Game mode changed to: ${e}`)}handleTimeControlChange(e){const t=this.container.querySelector(".custom-time");"custom"===e?t?.classList.remove("hidden"):t?.classList.add("hidden"),this.addLogEntry(`Time control set to: ${e}`)}offerDraw(){confirm("Are you sure you want to offer a draw?")&&this.addLogEntry("Draw offered")}resign(){if(confirm("Are you sure you want to resign?")){const e=this.engine.getGameState().currentPlayer,t="white"===e?"black":"white";this.addLogEntry(`${e} resigned. ${t} wins!`),this.showGameOver("white"===t?"white-wins":"black-wins")}}undoMove(){const e=this.engine.undoMove();e?(this.addLogEntry(`Move undone: ${e.san}`),this.updateGameStatus()):this.addLogEntry("No move to undo")}abortGame(){confirm("Are you sure you want to abort the game?")&&this.addLogEntry("Game aborted")}updateGameStatus(){const e=this.engine.getGameState(),t=this.container.querySelector(".status-text"),a=this.container.querySelector(".turn-white"),n=this.container.querySelector(".turn-black");if(a.classList.toggle("active","white"===e.currentPlayer),n.classList.toggle("active","black"===e.currentPlayer),e.isCheckmate){const a="white"===e.currentPlayer?"Black":"White";t.textContent=`Checkmate! ${a} wins`,this.addLogEntry(`Checkmate! ${a} wins`)}else if(e.isStalemate)t.textContent="Stalemate - Draw",this.addLogEntry("Stalemate - Draw");else if(e.isDraw)t.textContent="Draw",this.addLogEntry("Game drawn");else if(e.isCheck){const a="white"===e.currentPlayer?"White":"Black";t.textContent=`${a} in check`,this.addLogEntry(`${a} in check`)}else{const a="white"===e.currentPlayer?"White":"Black";t.textContent=`${a} to move`}}showGameOver(e){const t=this.container.querySelector(".status-text");switch(e){case"white-wins":t.textContent="White wins!";break;case"black-wins":t.textContent="Black wins!";break;case"draw":t.textContent="Draw!"}this.container.querySelectorAll(".action-btn").forEach(e=>{e.disabled=!0}),setTimeout(()=>{confirm("Game over! Would you like to play again?")&&this.reset()},1e3)}addLogEntry(e){const t=this.container.querySelector(".log-content"),a=document.createElement("div");a.className="log-entry",a.textContent=`${(new Date).toLocaleTimeString()}: ${e}`,t.appendChild(a),t.scrollTop=t.scrollHeight;const n=t.querySelectorAll(".log-entry");n.length>100&&n[0].remove()}reset(){this.container.querySelectorAll(".action-btn").forEach(e=>{e.disabled=!1}),this.container.querySelector(".log-content").innerHTML='<div class="log-entry">Game started</div>',this.updateGameStatus()}getSelectedGameMode(){const e=this.container.querySelector(".game-mode-select");return e?.value||"solo"}getSelectedDifficulty(){const e=this.container.querySelector(".difficulty-range");return parseInt(e?.value||"10")}getTimeControl(){const e=this.container.querySelector(".time-control-select"),t=e?.value;switch(t){case"unlimited":default:return null;case"blitz":return{initialTime:300,increment:0};case"rapid":return{initialTime:600,increment:0};case"classical":return{initialTime:1800,increment:0};case"custom":const e=this.container.querySelector(".initial-time"),t=this.container.querySelector(".increment-time");return{initialTime:60*parseInt(e?.value||"10"),increment:parseInt(t?.value||"0")}}}}class c{constructor(e,t,a){this.container=e,this.settings=t,this.onSettingsChange=a,this.createModal()}createModal(){this.container.innerHTML=`\n      <div class="modal-backdrop">\n        <div class="modal-content">\n          <div class="modal-header">\n            <h2>Settings</h2>\n            <button class="close-btn" data-action="close">&times;</button>\n          </div>\n          \n          <div class="modal-body">\n            <div class="settings-section">\n              <h3>Gameplay</h3>\n              \n              <div class="setting-item">\n                <label class="setting-label">\n                  <input type="checkbox" class="setting-checkbox" data-setting="allowPreMoves" ${this.settings.allowPreMoves?"checked":""}>\n                  <span class="setting-text">Allow Pre-moves</span>\n                </label>\n                <p class="setting-description">Enable making moves before it's your turn</p>\n              </div>\n              \n              <div class="setting-item">\n                <label class="setting-label">\n                  <input type="checkbox" class="setting-checkbox" data-setting="highlightLegalMoves" ${this.settings.highlightLegalMoves?"checked":""}>\n                  <span class="setting-text">Highlight Legal Moves</span>\n                </label>\n                <p class="setting-description">Show possible moves when a piece is selected</p>\n              </div>\n              \n              <div class="setting-item">\n                <label class="setting-label">\n                  <input type="checkbox" class="setting-checkbox" data-setting="showCoordinates" ${this.settings.showCoordinates?"checked":""}>\n                  <span class="setting-text">Show Board Coordinates</span>\n                </label>\n                <p class="setting-description">Display file and rank labels around the board</p>\n              </div>\n            </div>\n            \n            <div class="settings-section">\n              <h3>Animation & Sound</h3>\n              \n              <div class="setting-item">\n                <label class="setting-label">\n                  <span class="setting-text">Animation Speed</span>\n                </label>\n                <div class="setting-slider">\n                  <input type="range" min="0" max="2" step="0.1" value="${this.settings.animationSpeed}" class="setting-range" data-setting="animationSpeed">\n                  <div class="slider-labels">\n                    <span>Off</span>\n                    <span>Normal</span>\n                    <span>Fast</span>\n                  </div>\n                </div>\n              </div>\n              \n              <div class="setting-item">\n                <label class="setting-label">\n                  <input type="checkbox" class="setting-checkbox" data-setting="soundEffects" ${this.settings.soundEffects?"checked":""}>\n                  <span class="setting-text">Sound Effects</span>\n                </label>\n                <p class="setting-description">Play sounds for moves and game events</p>\n              </div>\n            </div>\n            \n            <div class="settings-section">\n              <h3>Display</h3>\n              \n              <div class="setting-item">\n                <label class="setting-label">\n                  <span class="setting-text">Theme</span>\n                </label>\n                <select class="setting-select" data-setting="theme">\n                  <option value="light" ${"light"===this.settings.theme?"selected":""}>Light</option>\n                  <option value="dark" ${"dark"===this.settings.theme?"selected":""}>Dark</option>\n                  <option value="system" ${"system"===this.settings.theme?"selected":""}>System</option>\n                </select>\n              </div>\n            </div>\n            \n            <div class="settings-section">\n              <h3>Advanced</h3>\n              \n              <div class="setting-item">\n                <button class="setting-button" data-action="reset-settings">\n                  Reset to Defaults\n                </button>\n                <p class="setting-description">Restore all settings to their default values</p>\n              </div>\n              \n              <div class="setting-item">\n                <button class="setting-button" data-action="export-settings">\n                  Export Settings\n                </button>\n                <p class="setting-description">Download your settings as a file</p>\n              </div>\n              \n              <div class="setting-item">\n                <button class="setting-button" data-action="import-settings">\n                  Import Settings\n                </button>\n                <input type="file" class="hidden" accept=".json" data-action="import-file">\n                <p class="setting-description">Load settings from a file</p>\n              </div>\n            </div>\n          </div>\n          \n          <div class="modal-footer">\n            <button class="btn btn-secondary" data-action="cancel">Cancel</button>\n            <button class="btn btn-primary" data-action="save">Save Changes</button>\n          </div>\n        </div>\n      </div>\n    `,this.setupEventListeners()}setupEventListeners(){this.container.addEventListener("click",e=>{const t=e.target.dataset.action;t&&this.handleAction(t)}),this.container.addEventListener("change",e=>{const t=e.target,a=t.dataset.setting;a&&this.handleSettingChange(a,t)}),this.container.addEventListener("click",e=>{e.target===this.container.querySelector(".modal-backdrop")&&this.hide()}),document.addEventListener("keydown",e=>{"Escape"!==e.key||this.container.classList.contains("hidden")||this.hide()})}handleAction(e){switch(e){case"close":case"cancel":this.hide();break;case"save":this.saveSettings();break;case"reset-settings":this.resetSettings();break;case"export-settings":this.exportSettings();break;case"import-settings":this.importSettings()}}handleSettingChange(e,t){let a;a="checkbox"===t.type?t.checked:"range"===t.type?parseFloat(t.value):t.value,this.settings={...this.settings,[e]:a}}saveSettings(){this.onSettingsChange(this.settings),this.hide()}resetSettings(){if(confirm("Are you sure you want to reset all settings to default values?")){const e={allowPreMoves:!0,showCoordinates:!0,highlightLegalMoves:!0,animationSpeed:1,soundEffects:!0,theme:"system",boardTheme:"brown",pieceSet:"classic"};this.settings=e,this.updateModal()}}exportSettings(){const e=JSON.stringify(this.settings,null,2),t=new Blob([e],{type:"application/json"}),a=document.createElement("a");a.href=URL.createObjectURL(t),a.download="chess-platform-settings.json",a.click(),URL.revokeObjectURL(a.href)}importSettings(){const e=this.container.querySelector('[data-action="import-file"]');e.click(),e.onchange=e=>{const t=e.target.files?.[0];if(!t)return;const a=new FileReader;a.onload=e=>{try{const t=JSON.parse(e.target?.result);this.validateSettings(t)?(this.settings={...this.settings,...t},this.updateModal(),alert("Settings imported successfully!")):alert("Invalid settings file format.")}catch(e){alert("Error reading settings file.")}},a.readAsText(t)}}validateSettings(e){return["allowPreMoves","showCoordinates","highlightLegalMoves","animationSpeed","soundEffects","theme"].every(t=>t in e)}updateModal(){this.container.querySelectorAll(".setting-checkbox").forEach(e=>{const t=e,a=t.dataset.setting;a&&a in this.settings&&(t.checked=this.settings[a])}),this.container.querySelectorAll(".setting-range").forEach(e=>{const t=e,a=t.dataset.setting;a&&a in this.settings&&(t.value=this.settings[a].toString())}),this.container.querySelectorAll(".setting-select").forEach(e=>{const t=e,a=t.dataset.setting;a&&a in this.settings&&(t.value=this.settings[a])})}show(){this.container.classList.remove("hidden"),document.body.style.overflow="hidden"}hide(){this.container.classList.add("hidden"),document.body.style.overflow=""}}class l{constructor(e,t,a){this.container=e,this.settings=t,this.onSettingsChange=a,this.createModal()}createModal(){this.container.innerHTML=`\n      <div class="modal-backdrop">\n        <div class="modal-content appearance-modal">\n          <div class="modal-header">\n            <h2>Appearance</h2>\n            <button class="close-btn" data-action="close">&times;</button>\n          </div>\n          \n          <div class="modal-body">\n            <div class="appearance-section">\n              <h3>Board Theme</h3>\n              <div class="theme-grid">\n                ${this.createBoardThemes()}\n              </div>\n            </div>\n            \n            <div class="appearance-section">\n              <h3>Piece Set</h3>\n              <div class="piece-grid">\n                ${this.createPieceSets()}\n              </div>\n            </div>\n            \n            <div class="appearance-section">\n              <h3>Preview</h3>\n              <div class="board-preview">\n                ${this.createBoardPreview()}\n              </div>\n            </div>\n          </div>\n          \n          <div class="modal-footer">\n            <button class="btn btn-secondary" data-action="cancel">Cancel</button>\n            <button class="btn btn-primary" data-action="save">Apply Changes</button>\n          </div>\n        </div>\n      </div>\n    `,this.setupEventListeners()}createBoardThemes(){return[{name:"brown",label:"Classic Brown",light:"#f0d9b5",dark:"#b58863"},{name:"blue",label:"Ocean Blue",light:"#dee3e6",dark:"#8ca2ad"},{name:"green",label:"Forest Green",light:"#ffffdd",dark:"#86a666"},{name:"purple",label:"Royal Purple",light:"#e6e6fa",dark:"#9370db"},{name:"red",label:"Cherry Red",light:"#ffd1dc",dark:"#cd5c5c"},{name:"gray",label:"Modern Gray",light:"#f5f5f5",dark:"#696969"}].map(e=>`\n      <div class="theme-option ${this.settings.boardTheme===e.name?"selected":""}" \n           data-theme="${e.name}">\n        <div class="theme-preview">\n          <div class="preview-square light" style="background-color: ${e.light}"></div>\n          <div class="preview-square dark" style="background-color: ${e.dark}"></div>\n          <div class="preview-square dark" style="background-color: ${e.dark}"></div>\n          <div class="preview-square light" style="background-color: ${e.light}"></div>\n        </div>\n        <span class="theme-label">${e.label}</span>\n      </div>\n    `).join("")}createPieceSets(){return[{name:"classic",label:"Classic",preview:"♔♛♜♝♞♟"},{name:"modern",label:"Modern",preview:"♔♛♜♝♞♟"},{name:"medieval",label:"Medieval",preview:"♔♛♜♝♞♟"},{name:"minimalist",label:"Minimalist",preview:"♔♛♜♝♞♟"}].map(e=>`\n      <div class="piece-option ${this.settings.pieceSet===e.name?"selected":""}" \n           data-piece-set="${e.name}">\n        <div class="piece-preview">\n          <span class="piece-sample">${e.preview}</span>\n        </div>\n        <span class="piece-label">${e.label}</span>\n      </div>\n    `).join("")}createBoardPreview(){return`\n      <div class="mini-board" data-theme="${this.settings.boardTheme}">\n        ${this.createPreviewSquares()}\n      </div>\n    `}createPreviewSquares(){const e=[["r","n","b","q","k","b","n","r"],["p","p","p","p","p","p","p","p"],[null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null],["P","P","P","P","P","P","P","P"],["R","N","B","Q","K","B","N","R"]];let t="";for(let a=0;a<8;a++)for(let n=0;n<8;n++){const i=(a+n)%2==1,s=e[a][n];t+=`\n          <div class="preview-square ${i?"light":"dark"}">\n            ${s?this.getPieceSymbol(s):""}\n          </div>\n        `}return t}getPieceSymbol(e){return`<span class="piece piece-${this.settings.pieceSet}">${{K:"♔",Q:"♕",R:"♖",B:"♗",N:"♘",P:"♙",k:"♚",q:"♛",r:"♜",b:"♝",n:"♞",p:"♟"}[e]||""}</span>`}setupEventListeners(){this.container.addEventListener("click",e=>{const t=e.target,a=t.dataset.action;if(a)return void this.handleAction(a);const n=t.closest(".theme-option");if(n)return void this.selectTheme(n.dataset.theme);const i=t.closest(".piece-option");i&&this.selectPieceSet(i.dataset.pieceSet)}),this.container.addEventListener("click",e=>{e.target===this.container.querySelector(".modal-backdrop")&&this.hide()}),document.addEventListener("keydown",e=>{"Escape"!==e.key||this.container.classList.contains("hidden")||this.hide()})}handleAction(e){switch(e){case"close":case"cancel":this.hide();break;case"save":this.saveSettings()}}selectTheme(e){this.container.querySelectorAll(".theme-option").forEach(e=>{e.classList.remove("selected")});const t=this.container.querySelector(`[data-theme="${e}"]`);t?.classList.add("selected"),this.settings.boardTheme=e,this.updatePreview()}selectPieceSet(e){this.container.querySelectorAll(".piece-option").forEach(e=>{e.classList.remove("selected")});const t=this.container.querySelector(`[data-piece-set="${e}"]`);t?.classList.add("selected"),this.settings.pieceSet=e,this.updatePreview()}updatePreview(){const e=this.container.querySelector(".board-preview");e&&(e.innerHTML=this.createBoardPreview())}saveSettings(){this.onSettingsChange({boardTheme:this.settings.boardTheme,pieceSet:this.settings.pieceSet}),this.hide()}show(){this.container.classList.remove("hidden"),document.body.style.overflow="hidden"}hide(){this.container.classList.add("hidden"),document.body.style.overflow=""}}class d{constructor(e){this.capturedWhite=[],this.capturedBlack=[],this.container=e,this.createDisplay()}createDisplay(){this.container.innerHTML='\n      <div class="captured-pieces">\n        <div class="captured-section white-captured">\n          <div class="captured-label">Captured by Black</div>\n          <div class="captured-list white-pieces"></div>\n        </div>\n        <div class="captured-section black-captured">\n          <div class="captured-label">Captured by White</div>\n          <div class="captured-list black-pieces"></div>\n        </div>\n      </div>\n    '}addCapturedPiece(e){"white"===e.color?this.capturedWhite.push(e):this.capturedBlack.push(e),this.updateDisplay()}removeCapturedPiece(e){if("white"===e.color){const t=this.capturedWhite.findIndex(t=>t.type===e.type&&t.color===e.color);-1!==t&&this.capturedWhite.splice(t,1)}else{const t=this.capturedBlack.findIndex(t=>t.type===e.type&&t.color===e.color);-1!==t&&this.capturedBlack.splice(t,1)}this.updateDisplay()}updateDisplay(){const e=this.container.querySelector(".white-pieces"),t=this.container.querySelector(".black-pieces"),a={queen:9,rook:5,bishop:3,knight:3,pawn:1,king:0},n=[...this.capturedWhite].sort((e,t)=>a[t.type]-a[e.type]),i=[...this.capturedBlack].sort((e,t)=>a[t.type]-a[e.type]);e.innerHTML=n.map(e=>`<span class="captured-piece" data-piece="${e.type}" data-color="${e.color}">\n        ${this.getPieceSymbol(e.type,e.color)}\n      </span>`).join(""),t.innerHTML=i.map(e=>`<span class="captured-piece" data-piece="${e.type}" data-color="${e.color}">\n        ${this.getPieceSymbol(e.type,e.color)}\n      </span>`).join(""),this.updateMaterialAdvantage()}updateMaterialAdvantage(){const e={queen:9,rook:5,bishop:3,knight:3,pawn:1,king:0},t=this.capturedWhite.reduce((t,a)=>t+e[a.type],0),a=this.capturedBlack.reduce((t,a)=>t+e[a.type],0)-t;if(this.container.querySelectorAll(".material-advantage").forEach(e=>e.remove()),a>0){const e=this.container.querySelector(".white-captured"),t=document.createElement("div");t.className="material-advantage",t.textContent=`+${a}`,e.appendChild(t)}else if(a<0){const e=this.container.querySelector(".black-captured"),t=document.createElement("div");t.className="material-advantage",t.textContent=`+${Math.abs(a)}`,e.appendChild(t)}}getPieceSymbol(e,t){return{king:{white:"♔",black:"♚"},queen:{white:"♕",black:"♛"},rook:{white:"♖",black:"♜"},bishop:{white:"♗",black:"♝"},knight:{white:"♘",black:"♞"},pawn:{white:"♙",black:"♟"}}[e]?.[t]||""}reset(){this.capturedWhite=[],this.capturedBlack=[],this.updateDisplay()}getCapturedPieces(){return{white:[...this.capturedWhite],black:[...this.capturedBlack]}}}var h=a(72),p=a.n(h),u=a(825),g=a.n(u),m=a(659),b=a.n(m),v=a(56),f=a.n(v),y=a(540),k=a.n(y),w=a(113),x=a.n(w),S=a(856),P={};P.styleTagTransform=x(),P.setAttributes=f(),P.insert=b().bind(null,"head"),P.domAPI=g(),P.insertStyleElement=k(),p()(S.A,P),S.A&&S.A.locals&&S.A.locals;class M{constructor(){this.settings=this.loadSettings(),this.engine=new i,this.initializeComponents(),this.setupEventListeners(),this.applyTheme()}loadSettings(){const e=localStorage.getItem("chess-settings");return e?JSON.parse(e):{allowPreMoves:!0,showCoordinates:!0,highlightLegalMoves:!0,animationSpeed:1,soundEffects:!0,theme:"system",boardTheme:"brown",pieceSet:"classic"}}saveSettings(){localStorage.setItem("chess-settings",JSON.stringify(this.settings))}initializeComponents(){document.getElementById("app").innerHTML=`\n      <div class="chess-app" data-theme="${this.settings.theme}">\n        <header class="app-header">\n          <h1 class="app-title">Chess Platform</h1>\n          <nav class="app-nav">\n            <button class="nav-btn" data-action="stream">Stream</button>\n            <button class="nav-btn" data-action="appearance">Appearance</button>\n            <button class="nav-btn" data-action="settings">Settings</button>\n            <button class="nav-btn" data-action="about">About</button>\n          </nav>\n        </header>\n        \n        <main class="app-main">\n          <div class="game-container">\n            <div class="left-panel">\n              <div class="player-info black-player">\n                <div class="player-name">Black Player</div>\n                <div class="player-time">∞</div>\n                <div id="black-captured" class="captured-pieces-section"></div>\n              </div>\n              \n              <div id="chess-board"></div>\n              \n              <div class="player-info white-player">\n                <div class="player-name">White Player</div>\n                <div class="player-time">∞</div>\n                <div id="white-captured" class="captured-pieces-section"></div>\n              </div>\n              \n              <div class="board-controls">\n                <button class="control-btn" data-action="flip-board">⟲</button>\n                <button class="control-btn" data-action="new-game">+ New Game</button>\n              </div>\n            </div>\n            \n            <div class="right-panel">\n              <div id="notation-table"></div>\n              <div id="game-panel"></div>\n            </div>\n          </div>\n        </main>\n        \n        <div id="settings-modal" class="modal hidden"></div>\n        <div id="appearance-modal" class="modal hidden"></div>\n      </div>\n    `,this.board=new s(document.getElementById("chess-board"),this.engine,this.settings,e=>this.handleMove(e)),this.notationTable=new o(document.getElementById("notation-table"),this.engine),this.gamePanel=new r(document.getElementById("game-panel"),this.engine);const e=document.createElement("div");e.className="captured-pieces-container",document.getElementById("white-captured").appendChild(e),this.capturedPieces=new d(e),this.settingsModal=new c(document.getElementById("settings-modal"),this.settings,e=>{this.settings={...this.settings,...e},this.saveSettings(),this.applySettings()}),this.appearanceModal=new l(document.getElementById("appearance-modal"),this.settings,e=>{this.settings={...this.settings,...e},this.saveSettings(),this.applyAppearance()})}setupEventListeners(){document.addEventListener("click",e=>{const t=e.target.dataset.action;t&&this.handleAction(t)}),document.addEventListener("keydown",e=>{if(e.ctrlKey||e.metaKey)switch(e.key){case"z":e.preventDefault(),this.undoMove();break;case"f":e.preventDefault(),this.board.flipBoard();break;case"n":e.preventDefault(),this.newGame()}if(!e.ctrlKey&&!e.metaKey)switch(e.key){case"ArrowLeft":e.preventDefault(),this.notationTable.goToPreviousMove();break;case"ArrowRight":e.preventDefault(),this.notationTable.goToNextMove();break;case"Home":e.preventDefault(),this.notationTable.goToStart();break;case"End":e.preventDefault(),this.notationTable.goToEnd()}})}handleAction(e){switch(e){case"stream":break;case"appearance":this.appearanceModal.show();break;case"settings":this.settingsModal.show();break;case"about":this.showAbout();break;case"flip-board":this.board.flipBoard();break;case"new-game":this.newGame()}}applyTheme(){const e=document.querySelector(".chess-app");if(e.setAttribute("data-theme",this.settings.theme),"system"===this.settings.theme){const t=window.matchMedia("(prefers-color-scheme: dark)").matches;e.setAttribute("data-actual-theme",t?"dark":"light")}else e.setAttribute("data-actual-theme",this.settings.theme)}applySettings(){this.board.updateSettings(this.settings),this.applyTheme()}applyAppearance(){this.board.updateAppearance(this.settings),this.applyTheme()}handleMove(e){this.notationTable.addMove(e),e.capturedPiece&&this.capturedPieces.addCapturedPiece(e.capturedPiece),this.gamePanel.updateGameStatus(),this.playMoveSound(e)}undoMove(){this.engine.undoMove()&&(this.board.updatePosition(),this.notationTable.removeLastMove(),this.gamePanel.updateGameStatus())}newGame(){this.engine=new i,this.board.reset(this.engine),this.notationTable.reset(),this.gamePanel.reset(),this.capturedPieces.reset()}playMoveSound(e){this.settings.soundEffects&&console.log("Playing move sound for:",e)}showAbout(){alert("Chess Platform v1.0.0\n\nA comprehensive chess game platform with multiple play modes and full chess rule implementation.\n\nFeatures:\n- Standard chess mechanics with all rules\n- Multiple game modes (solo, friend, bot)\n- Pre-moves and extended features\n- Responsive design with themes\n- Time controls and game analysis\n\nBuilt with TypeScript and modern web technologies.")}}document.addEventListener("DOMContentLoaded",()=>{new M})})();